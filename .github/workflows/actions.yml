# This is a basic workflow to help you get started with Actions

name: blogpost flask app

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      DB_DATABASE: cloud
      DB_USER: root
      DB_PASSWORD: root

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3

      # export the database URL as environment variable to be used in application
      - name: Start MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e "CREATE DATABASE IF NOT EXISTS $DB_DATABASE;" -u$DB_USER -p$DB_PASSWORD
          export DATABASE_URL=mysql+pymysql://$DB_USER:$DB_PASSWORD@localhost:3306/DB_DATABASE

      # export the database URL as environment variable to be used in application
      - name: Stop MySQL
        run: |
          sudo /etc/init.d/mysql stop

      # Runs a single command using the runners shell
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt

      - name: Integration tests
        run: |
            python -m unittest blogapp/tests/test_user.py
